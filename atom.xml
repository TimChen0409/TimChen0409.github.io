<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tim Chen&#39;s Blog</title>
  
  <subtitle>我寫的不是Code，是一種感覺</subtitle>
  <link href="https://timchen0409.github.io/atom.xml" rel="self"/>
  
  <link href="https://timchen0409.github.io/"/>
  <updated>2020-12-11T11:07:46.573Z</updated>
  <id>https://timchen0409.github.io/</id>
  
  <author>
    <name>Tim Chen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在.NET Core 使用 Automapper 輕鬆轉換類別</title>
    <link href="https://timchen0409.github.io/2020/12/08/net-core-automapper/"/>
    <id>https://timchen0409.github.io/2020/12/08/net-core-automapper/</id>
    <published>2020-12-08T07:58:40.000Z</published>
    <updated>2020-12-11T11:07:46.573Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在撰寫專案時，常常會碰到資料類別對映的處理，例如ViewModel和實際Entity之間的對應，或是層與層之間的轉換。常見的處理方式如下：</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">Index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = employeeList.Select(x =&gt; <span class="keyword">new</span> EmployeeViewModel</span><br><span class="line">    &#123;</span><br><span class="line">        Id = x.Id,</span><br><span class="line">        Name = x.Name,</span><br><span class="line">        Phone = x.Phone</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> View(result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//或是</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">Index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;EmployeeViewModel&gt; result = <span class="keyword">new</span> List&lt;EmployeeViewModel&gt;();</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> employee <span class="keyword">in</span> employeeList)</span><br><span class="line">    &#123;</span><br><span class="line">        result.Add(<span class="keyword">new</span> EmployeeViewModel()</span><br><span class="line">        &#123;</span><br><span class="line">            Id = employee.Id,</span><br><span class="line">            Name=employee.Name,</span><br><span class="line">            Phone=employee.Phone</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> View(result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果欄位變多的話，程式碼會變得很冗長，這時候就可以使用今天的主角 AutoMapper 來做這樣的處理。</p><h2 id="AutoMapper介紹"><a href="#AutoMapper介紹" class="headerlink" title="AutoMapper介紹"></a>AutoMapper介紹</h2><p>套件Github首頁：<a href="https://github.com/AutoMapper/AutoMapper">https://github.com/AutoMapper/AutoMapper</a><br>文件頁：<a href="https://docs.automapper.org/en/stable/index.html">https://docs.automapper.org/en/stable/index.html</a></p><p>AutoMapper 是一個類別對映轉換的套件，可以快速且簡單實現類別對映的處理，並減少繁瑣的程式碼。</p><h2 id="新增-NET-Core-MVC專案"><a href="#新增-NET-Core-MVC專案" class="headerlink" title="新增.NET Core MVC專案"></a>新增.NET Core MVC專案</h2><p>這邊使用.NET Core MVC專案來方便展示<br><img src="/img/20201208/0.png"></p><h2 id="測試環境設定"><a href="#測試環境設定" class="headerlink" title="測試環境設定"></a>測試環境設定</h2><p>新增Model,ViewModel , Controller 和 View，這邊直接產生資料並展示在View上</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Employee</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Phone &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EmployeeViewModel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Phone &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Controller：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">AutomapperCore.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EmployeeController</span> : <span class="title">Controller</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> List&lt;Employee&gt; _employeeList;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">EmployeeController</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            _employeeList = <span class="keyword">new</span> List&lt;Employee&gt;() &#123;</span><br><span class="line">                <span class="keyword">new</span> Employee&#123; Id=<span class="number">1</span>, Name=<span class="string">&quot;Amy&quot;</span>, Phone=<span class="string">&quot;0911334455&quot;</span>, Age=<span class="number">25</span> &#125;,</span><br><span class="line">                <span class="keyword">new</span> Employee&#123; Id=<span class="number">2</span>, Name=<span class="string">&quot;Tom&quot;</span>, Phone=<span class="string">&quot;0912554433&quot;</span>, Age=<span class="number">28</span> &#125;,</span><br><span class="line">                <span class="keyword">new</span> Employee&#123; Id=<span class="number">3</span>, Name=<span class="string">&quot;Andy&quot;</span>, Phone=<span class="string">&quot;0912112299&quot;</span>, Age=<span class="number">30</span> &#125;,</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> result = employeeList.Select(x =&gt; <span class="keyword">new</span> EmployeeViewModel</span><br><span class="line">            &#123;</span><br><span class="line">                Id = x.Id,</span><br><span class="line">                Name = x.Name,</span><br><span class="line">                Phone = x.Phone</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> View(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>View：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">@model IEnumerable&lt;AutomapperCore.Models.EmployeeViewModel&gt;</span><br><span class="line"></span><br><span class="line">&lt;table <span class="keyword">class</span>=<span class="string">&quot;table&quot;</span>&gt;</span><br><span class="line">    &lt;thead&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;</span><br><span class="line">                @Html.DisplayNameFor(model =&gt; model.Id)</span><br><span class="line">            &lt;/th&gt;</span><br><span class="line">            &lt;th&gt;</span><br><span class="line">                @Html.DisplayNameFor(model =&gt; model.Name)</span><br><span class="line">            &lt;/th&gt;</span><br><span class="line">            &lt;th&gt;</span><br><span class="line">                @Html.DisplayNameFor(model =&gt; model.Phone)</span><br><span class="line">            &lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/thead&gt;</span><br><span class="line">    &lt;tbody&gt;</span><br><span class="line">        @foreach (<span class="keyword">var</span> item <span class="keyword">in</span> Model)</span><br><span class="line">        &#123;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    @Html.DisplayFor(modelItem =&gt; item.Id)</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    @Html.DisplayFor(modelItem =&gt; item.Name)</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    @Html.DisplayFor(modelItem =&gt; item.Phone)</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/tbody&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><p><img src="/img/20201208/1.png"></p><h2 id="使用AutoMapper"><a href="#使用AutoMapper" class="headerlink" title="使用AutoMapper"></a>使用AutoMapper</h2><p>透過 NuGet 安裝 AutoMapper 到專案中</p><p><img src="/img/20201208/2.png"></p><p>基本使用：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">Index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> config = <span class="keyword">new</span> MapperConfiguration(cfg =&gt; cfg.CreateMap&lt;Employee, EmployeeViewModel&gt;()); <span class="comment">// 設定Model間的對映(左：來源類型,右：目標類型)</span></span><br><span class="line">    config.AssertConfigurationIsValid(); <span class="comment">//驗證類型映射(如果映射失敗會報錯)</span></span><br><span class="line">    <span class="keyword">var</span> mapper = config.CreateMapper(); <span class="comment">// 建立 Mapper</span></span><br><span class="line">    <span class="keyword">var</span> result = mapper.Map&lt;IEnumerable&lt;EmployeeViewModel&gt;&gt;(employeeList);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> View(result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>這邊說明一下config.AssertConfigurationIsValid()的功能：<br>如果我們對映時發生異常(EX：欄位名稱不一致時或是映射未定義等等…)，加入這行會報錯誤訊息，讓我們來測試一下，將EmployeeViewModel的Name改成Name1，並更改對應的View。這時候產生的結果如下：</p><p><img src="/img/20201208/3.png"><br>Name因為找不到對應欄位所以無法呈現資料，但我們無法直觀看出問題在哪。<br>這時候讓我們加入config.AssertConfigurationIsValid()後，產生的結果如下：</p><p><img src="/img/20201208/4.png"><br>AutoMapper會明確告訴我們哪個欄位沒有對應到。其他錯誤情況請自行測試看看。</p><h2 id="集中管理使用"><a href="#集中管理使用" class="headerlink" title="集中管理使用"></a>集中管理使用</h2><p>如果有多組類別需要對映，我們可以建立一個profile檔案去<strong>繼承Automapper的profile</strong>，接著在建構式裡將需要的轉換關係都建立出來。就可以集中管理這些mapping。</p><p>Profile：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MappingProfile</span> : <span class="title">Profile</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MappingProfile</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        CreateMap&lt;Employee, EmployeeViewModel&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ...使用 CreateMap&lt;&gt; 建立下一組</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接著當我們建立 Mapper 時，就可以直接用 AddProfile 和建立好的 Profile 來直接讀入對映關係：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">Index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> config = <span class="keyword">new</span> MapperConfiguration(cfg =&gt; cfg.AddProfile&lt;MappingProfile&gt;()); <span class="comment">//讀取Profile並設定對映</span></span><br><span class="line">    config.AssertConfigurationIsValid(); </span><br><span class="line">    <span class="keyword">var</span> mapper = config.CreateMapper(); </span><br><span class="line">    <span class="keyword">var</span> result = mapper.Map&lt;IEnumerable&lt;EmployeeViewModel&gt;&gt;(employeeList);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> View(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 MapperConfiguration 的時候也可以額外去做多次 AddProfile 和 CreateMap，因此可以按照實務上的運用去做分類和整理。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">Index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//設定多組對映</span></span><br><span class="line">    <span class="keyword">var</span> config = <span class="keyword">new</span> MapperConfiguration(cfg =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        cfg.AddProfile&lt;MappingProfile&gt;();</span><br><span class="line">        cfg.CreateMap&lt;Employee, EmployeeOtherViewModel&gt;();</span><br><span class="line">    &#125;); </span><br><span class="line">    config.AssertConfigurationIsValid();</span><br><span class="line">    <span class="keyword">var</span> mapper = config.CreateMapper();</span><br><span class="line">    <span class="keyword">var</span> result = mapper.Map&lt;IEnumerable&lt;EmployeeOtherViewModel&gt;&gt;(employeeList);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> View(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="導入DI"><a href="#導入DI" class="headerlink" title="導入DI"></a>導入DI</h2><p>至 NuGet 安裝 AutoMapper DI 用的套件：AutoMapper.Extensions.Microsoft.DependencyInjection<br><img src="/img/20201208/5.png"></p><blockquote><p>因為該套件相依AutoMapper，會一起自動安裝AutoMapper，所以實際上可以只裝這個就好</p></blockquote><p>在Startup.cs 註冊 Service，並加入驗證</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    services.AddControllersWithViews();</span><br><span class="line">    services.AddAutoMapper(<span class="keyword">typeof</span>(Startup));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, ... , IMapper mapper</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    mapper.ConfigurationProvider.AssertConfigurationIsValid();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Controller 注入取得Mapper</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">AutomapperCore.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EmployeeController</span> : <span class="title">Controller</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> IMapper _mapper;</span><br><span class="line">        <span class="keyword">private</span> List&lt;Employee&gt; _employeeList;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">EmployeeController</span>(<span class="params">IMapper mapper</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>._mapper = mapper;</span><br><span class="line"></span><br><span class="line">            _employeeList = <span class="keyword">new</span> List&lt;Employee&gt;() &#123;</span><br><span class="line">                <span class="keyword">new</span> Employee&#123; Id=<span class="number">1</span>, Name=<span class="string">&quot;Amy&quot;</span>, Phone=<span class="string">&quot;0911334455&quot;</span>, Age=<span class="number">25</span> &#125;,</span><br><span class="line">                <span class="keyword">new</span> Employee&#123; Id=<span class="number">2</span>, Name=<span class="string">&quot;Tom&quot;</span>, Phone=<span class="string">&quot;0912554433&quot;</span>, Age=<span class="number">28</span> &#125;,</span><br><span class="line">                <span class="keyword">new</span> Employee&#123; Id=<span class="number">3</span>, Name=<span class="string">&quot;Andy&quot;</span>, Phone=<span class="string">&quot;0912112299&quot;</span>, Age=<span class="number">30</span> &#125;,</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            _mapper.ConfigurationProvider.AssertConfigurationIsValid();</span><br><span class="line">            <span class="keyword">var</span> result = _mapper.Map&lt;IEnumerable&lt;EmployeeViewModel&gt;&gt;(_employeeList);</span><br><span class="line">            <span class="keyword">return</span> View(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>透過建構式注入 IMapper 即可自動取得所有Profile，並直接呼叫Map()方法對映，達成程式碼簡潔、低耦合的好處</p><h2 id="延伸使用"><a href="#延伸使用" class="headerlink" title="延伸使用"></a>延伸使用</h2><p>(<strong>下列範例已將 EmployeeViewModel 的 Name 欄位改成 FullName</strong>)</p><h4 id="反轉對映"><a href="#反轉對映" class="headerlink" title="反轉對映"></a>反轉對映</h4><p>當你的類別之間可能需要往回轉型，或是一時分不清是哪個Model要對應到哪個Model，那可以加上ReverseMap()實現雙向映射，以免轉來轉去出錯。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CreateMap&lt;Employee, EmployeeViewModel&gt;().ReverseMap();</span><br></pre></td></tr></table></figure><h4 id="客製化對映"><a href="#客製化對映" class="headerlink" title="客製化對映"></a>客製化對映</h4><p>在分層架構時會建立自己的Model，有時候可能實際上我們並不一定每個欄位的名稱都是一樣的、或者需要對Model進行特殊處理，那就可以用以下方法來處理：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CreateMap&lt;Employee, EmployeeViewModel&gt;().ForMember(des =&gt; des.FullName, opt =&gt; opt.MapFrom(src =&gt; src.Name));</span><br></pre></td></tr></table></figure><p>如果是改變欄位資料或合併，那就可以用以下方法來處理：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CreateMap&lt;Employee, EmployeeViewModel&gt;().ForMember(des =&gt; des.FullName, opt =&gt; opt.MapFrom(src =&gt; <span class="string">$&quot;<span class="subst">&#123;src.Id&#125;</span>：<span class="subst">&#123;src.Name&#125;</span>&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="/img/20201208/6.png"></p><h4 id="忽略對映"><a href="#忽略對映" class="headerlink" title="忽略對映"></a>忽略對映</h4><p>如果兩個類別之間大多數欄位雖然對映，但某幾個欄位是沒有對映的，來源資料並沒有某個目標資料需要的欄位，如果直接Map()對映，就會發生找不到對映欄位的錯誤。這時候就可以使用 Ignore 來忽略掉指定的欄位。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CreateMap&lt;Employee, EmployeeViewModel&gt;().ForMember(des =&gt; des.FullName, src =&gt; src.Ignore());</span><br></pre></td></tr></table></figure><p>##結語<br>這篇把 AutoMapper 運用在 .Net Core的基本用法和設定介紹完了，並利用.Net Core DI的特性集中管理，將這些類別轉換對映的設定都集中在一個地方</p><p>如果要運用在ASP.NET MVC 上可以參考網路較舊的教學文，但要注意新版的AutoMapper的設定與舊版有所差異，其他較進階的用法如多個物件對映至一個類別、複雜結構類別對映至扁平化類別，可以參考官方文件</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在撰寫專案時，常常會碰到資料類別對映的處理，例如ViewModel和實際Entity之間的對應，或是層與層之間的轉換。常見的處理方式如下：&lt;/p&gt;</summary>
    
    
    
    <category term=".Net Core" scheme="https://timchen0409.github.io/categories/Net-Core/"/>
    
    
    <category term=".NET Core" scheme="https://timchen0409.github.io/tags/NET-Core/"/>
    
    <category term="Backend" scheme="https://timchen0409.github.io/tags/Backend/"/>
    
    <category term="C#" scheme="https://timchen0409.github.io/tags/C/"/>
    
    <category term="Automapper" scheme="https://timchen0409.github.io/tags/Automapper/"/>
    
  </entry>
  
  <entry>
    <title>在.NET Core MVC 使用 ClosedXML 匯出Excel</title>
    <link href="https://timchen0409.github.io/2020/12/03/net-core-closedXML/"/>
    <id>https://timchen0409.github.io/2020/12/03/net-core-closedXML/</id>
    <published>2020-12-02T17:20:43.000Z</published>
    <updated>2020-12-11T11:07:50.512Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在後台常常需要有報表匯出Excel的功能，過往是使用<a href="https://github.com/nissl-lab/npoi">NPOI</a>去實作，近期專案決定使用另一套 Eecel 程式庫 ClosedXML，所以簡單練習紀錄一下</p><a id="more"></a><h2 id="新增-NET-Core-MVC專案"><a href="#新增-NET-Core-MVC專案" class="headerlink" title="新增.NET Core MVC專案"></a>新增.NET Core MVC專案</h2><p><img src="/img/20201203/ClosedXML1.png"></p><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p>工具列→專案→管理NuGet套件→瀏覽→搜尋輸入ClosedXML→安裝</p><p><img src="/img/20201203/ClosedXML2.png"></p><h2 id="測試環境設定"><a href="#測試環境設定" class="headerlink" title="測試環境設定"></a>測試環境設定</h2><p>新增Model,Controller 和 View，這邊不做資料庫等設定，直接產生資料與呈現。</p><p>Model：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Product</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> ProductName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">decimal</span> UnitPrice &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Quantity &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Controller：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">ClosedXMLExample.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ProductController</span> : <span class="title">Controller</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> List&lt;Product&gt; productList;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ProductController</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            productList = <span class="keyword">new</span> List&lt;Product&gt;() &#123;</span><br><span class="line">                <span class="keyword">new</span> Product&#123; Id=<span class="number">1</span>,ProductName=<span class="string">&quot;Apple&quot;</span>,UnitPrice=<span class="number">30.5</span>m,Quantity=<span class="number">4</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Product&#123; Id=<span class="number">2</span>,ProductName=<span class="string">&quot;Banana&quot;</span>,UnitPrice=<span class="number">40</span>,Quantity=<span class="number">8</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Product&#123; Id=<span class="number">3</span>,ProductName=<span class="string">&quot;Orange&quot;</span>,UnitPrice=<span class="number">20</span>,Quantity=<span class="number">10</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Product&#123; Id=<span class="number">4</span>,ProductName=<span class="string">&quot;Watermelon&quot;</span>,UnitPrice=<span class="number">100</span>,Quantity=<span class="number">2</span>&#125;,</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> View(productList);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>檢視：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">@model IEnumerable&lt;ClosedXMLExample.Models.Product&gt;</span><br><span class="line"></span><br><span class="line">@&#123;</span><br><span class="line">    ViewData[<span class="string">&quot;Title&quot;</span>] = <span class="string">&quot;Index&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;button <span class="keyword">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;Export Excel&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;table <span class="keyword">class</span>=<span class="string">&quot;table&quot;</span>&gt;</span><br><span class="line">    &lt;thead&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;</span><br><span class="line">                @Html.DisplayNameFor(model =&gt; model.Id)</span><br><span class="line">            &lt;/th&gt;</span><br><span class="line">            &lt;th&gt;</span><br><span class="line">                @Html.DisplayNameFor(model =&gt; model.ProductName)</span><br><span class="line">            &lt;/th&gt;</span><br><span class="line">            &lt;th&gt;</span><br><span class="line">                @Html.DisplayNameFor(model =&gt; model.UnitPrice)</span><br><span class="line">            &lt;/th&gt;</span><br><span class="line">            &lt;th&gt;</span><br><span class="line">                @Html.DisplayNameFor(model =&gt; model.Quantity)</span><br><span class="line">            &lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/thead&gt;</span><br><span class="line">    &lt;tbody&gt;</span><br><span class="line">        @foreach (<span class="keyword">var</span> item <span class="keyword">in</span> Model)</span><br><span class="line">        &#123;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    @Html.DisplayFor(modelItem =&gt; item.Id)</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    @Html.DisplayFor(modelItem =&gt; item.ProductName)</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    @Html.DisplayFor(modelItem =&gt; item.UnitPrice)</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    @Html.DisplayFor(modelItem =&gt; item.Quantity)</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/tbody&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>到這邊前置作業就結束，到這邊可以看到網頁可以顯示商品銷售資料，並新增一顆匯出Excel按鈕。</p><p><img src="/img/20201203/ClosedXML3.png"></p><h2 id="實作方法"><a href="#實作方法" class="headerlink" title="實作方法"></a>實作方法</h2><p>之後至ProductController 引用命名空間並 新增Action</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> ClosedXML.Excel;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">ExportExcel</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//取得欄位名稱</span></span><br><span class="line">    <span class="keyword">var</span> columnNameList = <span class="keyword">typeof</span>(Product).GetProperties().Select(c =&gt; c.Name).ToList();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> contentType = <span class="string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> fileName = <span class="string">&quot;ProductsReport.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//建立Excel</span></span><br><span class="line">    <span class="keyword">var</span> workbook = <span class="keyword">new</span> XLWorkbook();</span><br><span class="line">    IXLWorksheet worksheet = workbook.Worksheets.Add(<span class="string">&quot;ProductsSale&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//設定標題列名稱與樣式</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= columnNameList.Count(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        worksheet.Cell(<span class="number">1</span>, i).Value = columnNameList[i - <span class="number">1</span>];</span><br><span class="line">        worksheet.Cell(<span class="number">1</span>, i).Style.Fill.SetBackgroundColor(XLColor.Red);</span><br><span class="line">        worksheet.Cell(<span class="number">1</span>, i).Style.Font.SetFontSize(<span class="number">12</span>);</span><br><span class="line">        worksheet.Cell(<span class="number">1</span>, i).Style.Font.SetBold();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">1</span>; j &lt;= productList.Count(); j++)</span><br><span class="line">    &#123;</span><br><span class="line">        worksheet.Cell(j + <span class="number">1</span>, <span class="number">1</span>).Value = productList[j - <span class="number">1</span>].Id;</span><br><span class="line">        worksheet.Cell(j + <span class="number">1</span>, <span class="number">2</span>).Value = productList[j - <span class="number">1</span>].ProductName;</span><br><span class="line">        worksheet.Cell(j + <span class="number">1</span>, <span class="number">3</span>).Value = productList[j - <span class="number">1</span>].UnitPrice;</span><br><span class="line">        worksheet.Cell(j + <span class="number">1</span>, <span class="number">4</span>).Value = productList[j - <span class="number">1</span>].Quantity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//寫入檔案</span></span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> stream = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">    &#123;</span><br><span class="line">        workbook.SaveAs(stream);</span><br><span class="line">        <span class="keyword">var</span> content = stream.ToArray();</span><br><span class="line">        <span class="keyword">return</span> File(content, contentType, fileName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>並調整View裡面按鈕的部份。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;button <span class="keyword">class</span>=<span class="string">&quot;btn btn-danger&quot;</span> asp-action=<span class="string">&quot;ExportExcel&quot;</span>&gt;Export Excel&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>之後點選按鈕匯出結果如下：</p><p><img src="/img/20201203/ClosedXML4.png"></p><p>輕鬆地完成匯出報表的功能</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在後台常常需要有報表匯出Excel的功能，過往是使用&lt;a href=&quot;https://github.com/nissl-lab/npoi&quot;&gt;NPOI&lt;/a&gt;去實作，近期專案決定使用另一套 Eecel 程式庫 ClosedXML，所以簡單練習紀錄一下&lt;/p&gt;</summary>
    
    
    
    <category term=".Net Core" scheme="https://timchen0409.github.io/categories/Net-Core/"/>
    
    
    <category term=".NET Core" scheme="https://timchen0409.github.io/tags/NET-Core/"/>
    
    <category term="Backend" scheme="https://timchen0409.github.io/tags/Backend/"/>
    
    <category term="C#" scheme="https://timchen0409.github.io/tags/C/"/>
    
    <category term="ClosedXML" scheme="https://timchen0409.github.io/tags/ClosedXML/"/>
    
  </entry>
  
</feed>
